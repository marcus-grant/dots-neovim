#
#  React
#

#
## create class component
#

snippet RCCC "create class component" b
class ${1:ClassComponent} extends Component {
  constructor(props) {
	super(props);
	this.state = {
	};
  }
  $0
  render() {
	return (
	);
  }
}

$1.propTypes = {
};

$1.defaultProps = {
};

export ${2:default} $1
endsnippet

#
## import statemt for react
#
snippet RIRP "Import for React & (opt) PropTypes" b
import React, { Component } from 'react';
${1:import PropTypes from 'prop-types';}
endsnippet

#
# functional component with prop types
#
snippet RFCPT "Functional Component with PropTypes" b
const $1 = (props) => {
  return (
  );
};
$1.defaultProps = {
};

$1.propTypes = {
  $0
};
endsnippet

snippet RCSF "Change react state with an arrow" b
this.$1 = this.$1.bind(this);

$1 = (${2: }) => {
  this.setState(prevState => {
	return $3;
  });
}
endsnippet

# TernJs Configs to Use
snippet ternConfig "Default TernJS Config" b
Request: {
  "query": {
	"type": "completions",
	"types": true,
	"depths": true,
	"filter": true,
	"caseInsensitive": false,
	"guess": true,
	"sort": false,
	"expandWordForward": true,
	"includeKeywords": false,
	"inLiteral": true,
	"file": "#0",
	"end": {
	  "line": 2,
	  "ch": 6
	},
	"lineCharPositions": true
  },
  "files": [
	{
	  "type": "full",
	  "name": "test.js",
	  "text": "import React from 'react';\nReact.\n"
	}
  ]
}
endsnippet
